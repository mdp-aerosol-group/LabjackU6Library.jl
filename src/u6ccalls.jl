# ccall wrappers for a number of functions in libU6.so
# the static library is generated by compilation of
# functions in the U6 folder

# Opens USB Connection and returns a HANDLE address
# Local ID -1 is equal to first found
function openUSBConnection(localID)
    HANDLE = ccall((:openUSBConnection, lib),
                   Ptr{Nothing}, (Int32,), Int32(localID))
    return HANDLE
end

# Closes USB connection
function closeUSBConnection(HANDLE)
    ccall((:closeUSBConnection,  lib), Nothing, (Ptr{u6CalibrationInfo},), HANDLE)
end

# Read out calibration information from Device
function getCalibrationInformation(HANDLE)
     caliInfo = u6CalibrationInfo(UInt8(1), UInt8(1),
								  NTuple{40,Float64}(0 for i in 1:40))
     ccall((:getCalibrationInfo, lib),
		   Int64, (Ptr{Nothing},Ref{u6CalibrationInfo}), HANDLE, caliInfo)

    return caliInfo
end

function getTdacCalibrationInformation(HANDLE, DIOAPinNum)
	caliInfo = u6TDACCalibrationInfo(UInt8(1), 
									 NTuple{4,Float64}(0 for i in 1:4))
    ccall((:getTdacCalibrationInfo, lib),
		   Int64, (Ptr{Nothing},Ref{u6TDACCalibrationInfo}, UInt8), 
		   HANDLE, caliInfo,DIOAPinNum)

    return caliInfo
end	

function extendedChecksum!(sendIt)
    ccall((:extendedChecksum, lib), Nothing,
          (Ref{labjackBuffer}, Cint), sendIt, length(sendIt.buff))
end

function labjackSend(HANDLE,sendIt)
    ccall((:LJUSB_Write, lib), Culong,
          (Ptr{Nothing}, Ref{labjackBuffer}, Culong),
		  HANDLE, sendIt, length(sendIt.buff))
end

function labjackRead!(HANDLE,recordIt)
    ccall((:LJUSB_Read, lib), Culong,
          (Ptr{Nothing}, Ref{labjackBuffer}, Culong),
		  HANDLE, recordIt, length(recordIt.buff))
end

function calibrateAIN(caliInfo,recordIt,resIn,gainIn,bits24,i,j,k)
    foo = Cdouble(0)
    bytesV = recordIt.buff[i] + recordIt.buff[j]*256 + recordIt.buff[k]*65536
    ccall((:getAinVoltCalibrated_julia, lib), Cdouble,
            (Ref{u6CalibrationInfo}, Cint, Cint, Cint, Cuint, Ref{Cdouble}),
			 caliInfo, resIn, gainIn, bits24, bytesV, foo)
end

function setLJTDAC(HANDLE,caliInfoTdac,DIOAPinNum,analogVDacA, analogVDacB)
    ccall((:setLJTDAC, lib), Cint,
            (Ptr{Nothing},Ref{u6TDACCalibrationInfo},UInt8,Float64,Float64),
			 HANDLE, caliInfoTdac,DIOAPinNum,analogVDacA,analogVDacB)

end
