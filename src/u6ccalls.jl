# ccall wrappers for a number of functions in libU6.so
# the static library is generated by compilation of
# functions in the U6 folder

"""
    openUSBConnection(localID)

Open USB connection to Labjack and return a HANDLE. Use `-1` for "first found" or specify local ID for unit.

# Examples
```julia-repl
julia> HANDLE = openUSBConnection(-1)
Ptr{Nothing} @0x0000000001sx243

julia> HANDLE = openUSBConnection(-1)
Open error: No U6 devices could be found
Ptr{Nothing} @0x0000000000000000
```
"""
function openUSBConnection(localID)
    HANDLE = ccall((:openUSBConnection, lib),
                   Ptr{Nothing}, (Int32,), Int32(localID))
    return HANDLE
end

"""
    closeUSBConnection(HANDLE)

Closes USB connection to Labjack with HANDLE.

# Example
```julia-repl
julia> closeUSBConnection(HANDLE)
```
"""
function closeUSBConnection(HANDLE)
    ccall((:closeUSBConnection,  lib), Nothing, (Ptr{u6CalibrationInfo},), HANDLE)
end

"""
    getCalibrationInformation(HANDLE)

Retrieves calibration 

# Example
```julia-repl
julia> caliInfo = getCalibrationInformation(HANDLE)
```
"""
function getCalibrationInformation(HANDLE)
     caliInfo = u6CalibrationInfo(UInt8(1), UInt8(1),
								  NTuple{40,Float64}(0 for i in 1:40))
     ccall((:getCalibrationInfo, lib),
		   Int64, (Ptr{Nothing},Ref{u6CalibrationInfo}), HANDLE, caliInfo)

    return caliInfo
end

function getTdacCalibrationInformation(HANDLE, DIOAPinNum)
	caliInfo = u6TDACCalibrationInfo(UInt8(1), 
									 NTuple{4,Float64}(0 for i in 1:4))
    ccall((:getTdacCalibrationInfo, lib),
		   Int64, (Ptr{Nothing},Ref{u6TDACCalibrationInfo}, UInt8), 
		   HANDLE, caliInfo,DIOAPinNum)

    return caliInfo
end	

function extendedChecksum!(sendIt)
    ccall((:extendedChecksum, lib), Nothing,
          (Ref{labjackBuffer}, Cint), sendIt, length(sendIt.buff))
end

"""
    labjackSend(HANDLE,sendIt)

Sends package sendIt to device. See example in the examples directory and the 
LabJack documentation on how to construct the buffer

"""
function labjackSend(HANDLE,sendIt)
    ccall((:LJUSB_Write, lib), Culong,
          (Ptr{Nothing}, Ref{labjackBuffer}, Culong),
		  HANDLE, sendIt, length(sendIt.buff))
end

"""
    labjackRead!(HANDLE,recordIt)

Reads the return package from the device and stores it in recordIt. 
See example in the examples directory and the LabJack documentation on how to construct 
the recordIt buffer and how to interpret the output.

"""
function labjackRead!(HANDLE,recordIt)
    ccall((:LJUSB_Read, lib), Culong,
          (Ptr{Nothing}, Ref{labjackBuffer}, Culong),
		  HANDLE, recordIt, length(recordIt.buff))
end

"""
    labjackStream!(HANDLE,recordIt)

Reads the return package from the device in streaming mode and stores it in recordIt. 
See example in the examples directory and the LabJack documentation on how to construct 
the recordIt buffer and how to interpret the output.

"""
function labjackStream!(HANDLE,recordIt)
    ccall((:LJUSB_Stream, lib), Culong,
          (Ptr{Nothing}, Ref{labjackBuffer}, Culong),
		  HANDLE, recordIt, length(recordIt.buff))
end

"""
    calibrateAIN(caliInfo,recordIt,resIn,gainIn,bits24,i,j,k)

Calibrates the voltage from the AIN reads. See example in the examples directory and 
the LabJack documentation on how to pick i,j,k for each channel (which depends on the 
structure of the recordIt package). Also see u6Feedback.c for another example.

 - caliInfo is the calibration data
 - recordIt is the package retrieved
 - resIn is the resolution of the voltage read
 - gainIN is he gain setting
 - bits24 is the bit setting
 - i,j,k are indices corresponding to the return bytes for the channel

"""
function calibrateAIN(caliInfo,recordIt,resIn,gainIn,bits24,i,j,k)
    foo = Cdouble(0)
    bytesV = recordIt.buff[i] + recordIt.buff[j]*256 + recordIt.buff[k]*65536
    ccall((:getAinVoltCalibrated_julia, lib), Cdouble,
            (Ref{u6CalibrationInfo}, Cint, Cint, Cint, Cuint, Ref{Cdouble}),
			 caliInfo, resIn, gainIn, bits24, bytesV, foo)
end

function setLJTDAC(HANDLE,caliInfoTdac,DIOAPinNum,analogVDacA, analogVDacB)
    ccall((:setLJTDAC, lib), Cint,
            (Ptr{Nothing},Ref{u6TDACCalibrationInfo},UInt8,Float64,Float64),
			 HANDLE, caliInfoTdac,DIOAPinNum,analogVDacA,analogVDacB)

end
